---
import { requireAuth } from '../../lib/auth';

export const prerender = false;

// Require authentication
const session = requireAuth(Astro.cookies);

// TODO: Load insights from database or JSON file
// For now, we'll use mock data
const insights = [
  {
    id: '1',
    slug: 'dynamic-offers-ndc',
    type: 'article',
    title: 'Dynamic offers for the IATA NDC era',
    preview: {
      title: 'Dynamic offers for the IATA NDC era',
      excerpt: 'How modern airlines are adapting to new distribution standards with flexible offer management.',
      backgroundGradient: 'linear-gradient(135deg, #FFF5E6 0%, #FFE4CC 100%)',
      icon: 'plane' as const,
      meta: 'ARTICLE' as const,
    },
    author: 'Retailaer Team',
    publishedAt: '2025-10-15',
    carouselOrder: 1,
    isActive: true,
  },
  {
    id: '2',
    slug: 'orders-without-friction',
    type: 'article',
    title: 'Orders without friction',
    preview: {
      title: 'Orders without friction',
      excerpt: 'Streamlining the booking experience while maximizing ancillary opportunities.',
      backgroundGradient: 'linear-gradient(135deg, #FFF9E6 0%, #FFEDB3 100%)',
      icon: 'document' as const,
      meta: 'ARTICLE' as const,
    },
    author: 'Retailaer Team',
    publishedAt: '2025-10-10',
    carouselOrder: 2,
    isActive: true,
  },
  {
    id: '3',
    slug: 'payments-cfo-likes',
    type: 'article',
    title: 'Payments your CFO likes',
    preview: {
      title: 'Payments your CFO likes',
      excerpt: 'Everything from payments to payouts with easeâ€”secure, reliable, and fully compliant.',
      backgroundGradient: 'linear-gradient(135deg, #E6F7FF 0%, #CCE7FF 100%)',
      icon: 'chart' as const,
      meta: 'REPORT' as const,
    },
    author: 'Retailaer Team',
    publishedAt: '2025-10-05',
    carouselOrder: 3,
    isActive: true,
  },
];
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manage Insights & Articles - Retailaer</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
  <!-- Slim Header -->
  <header class="editor-header">
    <div class="header-left">
      <a href="/" class="logo">Retailaer</a>
      <span class="divider">|</span>
      <span class="page-title">Manage Insights</span>
    </div>
    <div class="header-actions">
      <a href="/blog/editor" class="btn-primary">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
          <path d="M8 2v12M2 8h12" stroke="currentColor" stroke-width="2"/>
        </svg>
        New Post
      </a>
      <div class="user-menu">
        {session.picture && <img src={session.picture} alt={session.name} class="avatar" />}
        <button class="btn-text" id="user-menu-btn">
          {session.name}
          <svg width="12" height="12" viewBox="0 0 16 16" fill="currentColor">
            <path d="M4 6l4 4 4-4z"/>
          </svg>
        </button>
        <div class="dropdown hidden" id="user-dropdown">
          <a href="/api/auth/logout">Logout</a>
        </div>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <div class="container">
    <div class="page-header">
      <div>
        <h1>Insights & Articles</h1>
        <p class="subtitle">Manage carousel order, visibility, and preview appearance</p>
      </div>
      <div class="carousel-settings">
        <label>
          <span>Auto-rotate</span>
          <input type="number" id="rotate-interval" value="15" min="5" max="60" />
          <span>seconds</span>
        </label>
        <label>
          <span>Visible cards</span>
          <input type="number" id="visible-count" value="3" min="1" max="6" />
        </label>
      </div>
    </div>

    <!-- Insights List (Drag & Drop to reorder) -->
    <div class="insights-list" id="insights-list">
      {insights.map((insight) => (
        <div class="insight-item" data-id={insight.id} data-order={insight.carouselOrder}>
          <div class="drag-handle">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
              <circle cx="6" cy="5" r="1.5"/>
              <circle cx="6" cy="10" r="1.5"/>
              <circle cx="6" cy="15" r="1.5"/>
              <circle cx="14" cy="5" r="1.5"/>
              <circle cx="14" cy="10" r="1.5"/>
              <circle cx="14" cy="15" r="1.5"/>
            </svg>
          </div>

          <div class="insight-info">
            <div class="insight-header">
              <div>
                <h3>{insight.title}</h3>
                <div class="insight-meta-row">
                  <span class="badge">{insight.preview.meta}</span>
                  <span class="date">{new Date(insight.publishedAt).toLocaleDateString()}</span>
                  <span class="author">{insight.author}</span>
                </div>
              </div>
              <div class="insight-actions">
                <label class="toggle">
                  <input type="checkbox" checked={insight.isActive} data-id={insight.id} class="active-toggle" />
                  <span class="toggle-slider"></span>
                  <span class="toggle-label">{insight.isActive ? 'Active' : 'Hidden'}</span>
                </label>
              </div>
            </div>

            <!-- Preview Card (collapsible) -->
            <div class="preview-section">
              <button class="preview-toggle" data-id={insight.id}>
                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                  <path d="M4 6l4 4 4-4z"/>
                </svg>
                Preview Settings
              </button>
              <div class="preview-details hidden" data-id={insight.id}>
                <div class="preview-card-demo" style={insight.preview.backgroundGradient}>
                  <div class="demo-icon">{insight.preview.icon}</div>
                  <div class="demo-meta">{insight.preview.meta}</div>
                  <h4>{insight.preview.title}</h4>
                  <p>{insight.preview.excerpt}</p>
                </div>
                <div class="preview-controls">
                  <button class="btn-text" data-id={insight.id} data-action="edit-preview">Edit Preview</button>
                  <button class="btn-text" data-id={insight.id} data-action="edit-post">Edit Post</button>
                  <button class="btn-text text-danger" data-id={insight.id} data-action="delete">Delete</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>

    <div class="empty-state hidden" id="empty-state">
      <svg width="120" height="120" viewBox="0 0 120 120" fill="none">
        <circle cx="60" cy="60" r="50" fill="#f0f7f7"/>
        <path d="M40 60h40M60 40v40" stroke="#0a5c5c" stroke-width="4" stroke-linecap="round"/>
      </svg>
      <h3>No insights yet</h3>
      <p>Create your first blog post or article to get started</p>
      <a href="/blog/editor" class="btn-primary">Create Post</a>
    </div>
  </div>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #fafafa;
      color: #1a1a1a;
    }

    /* Header */
    .editor-header {
      background: white;
      border-bottom: 1px solid #e5e7eb;
      padding: 12px 24px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.02);
    }

    .header-left {
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .logo {
      font-size: 18px;
      font-weight: 700;
      color: #0a5c5c;
      text-decoration: none;
      letter-spacing: -0.5px;
    }

    .divider {
      color: #e5e7eb;
    }

    .page-title {
      font-size: 14px;
      color: #6b7280;
      font-weight: 500;
    }

    .header-actions {
      display: flex;
      align-items: center;
      gap: 16px;
    }

    .btn-text {
      background: none;
      border: none;
      color: #4b5563;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      padding: 6px 12px;
      border-radius: 6px;
      display: flex;
      align-items: center;
      gap: 6px;
      transition: all 0.2s;
      text-decoration: none;
    }

    .btn-text:hover {
      background: #f0f7f7;
      color: #0a5c5c;
    }

    .btn-primary {
      background: #0a5c5c;
      color: white;
      border: none;
      padding: 8px 20px;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 8px;
      text-decoration: none;
    }

    .btn-primary:hover {
      background: #084a4f;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(10, 92, 92, 0.2);
    }

    .user-menu {
      position: relative;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      object-fit: cover;
    }

    .dropdown {
      position: absolute;
      top: 100%;
      right: 0;
      margin-top: 8px;
      background: white;
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      min-width: 150px;
    }

    .dropdown a {
      display: block;
      padding: 12px 16px;
      color: #374151;
      text-decoration: none;
      font-size: 14px;
    }

    .dropdown a:hover {
      background: #f0f7f7;
      color: #0a5c5c;
    }

    .hidden {
      display: none !important;
    }

    /* Container */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 32px 24px;
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 32px;
    }

    .page-header h1 {
      font-size: 32px;
      font-weight: 700;
      color: #1a1a1a;
      margin-bottom: 8px;
    }

    .subtitle {
      font-size: 16px;
      color: #6b7280;
    }

    .carousel-settings {
      display: flex;
      gap: 24px;
      background: white;
      padding: 16px 24px;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
    }

    .carousel-settings label {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 14px;
      color: #374151;
    }

    .carousel-settings input[type="number"] {
      width: 60px;
      padding: 6px 8px;
      border: 1px solid #e5e7eb;
      border-radius: 4px;
      font-size: 14px;
      text-align: center;
    }

    /* Insights List */
    .insights-list {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .insight-item {
      background: white;
      border: 1px solid #e5e7eb;
      border-radius: 12px;
      padding: 20px;
      display: flex;
      gap: 16px;
      transition: all 0.2s;
      cursor: move;
    }

    .insight-item:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      border-color: #0a5c5c;
    }

    .insight-item.dragging {
      opacity: 0.5;
    }

    .drag-handle {
      color: #9ca3af;
      cursor: grab;
      padding: 4px;
    }

    .drag-handle:active {
      cursor: grabbing;
    }

    .insight-info {
      flex: 1;
    }

    .insight-header {
      display: flex;
      justify-content: space-between;
      align-items: start;
      margin-bottom: 12px;
    }

    .insight-header h3 {
      font-size: 18px;
      font-weight: 600;
      color: #1a1a1a;
      margin-bottom: 8px;
    }

    .insight-meta-row {
      display: flex;
      gap: 12px;
      align-items: center;
      font-size: 13px;
      color: #6b7280;
    }

    .badge {
      background: #f0f7f7;
      color: #0a5c5c;
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .date, .author {
      font-size: 13px;
    }

    .insight-actions {
      display: flex;
      gap: 12px;
      align-items: center;
    }

    /* Toggle Switch */
    .toggle {
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
    }

    .toggle input {
      display: none;
    }

    .toggle-slider {
      width: 44px;
      height: 24px;
      background: #d1d5db;
      border-radius: 12px;
      position: relative;
      transition: background 0.2s;
    }

    .toggle-slider::before {
      content: '';
      position: absolute;
      width: 18px;
      height: 18px;
      background: white;
      border-radius: 50%;
      top: 3px;
      left: 3px;
      transition: transform 0.2s;
    }

    .toggle input:checked + .toggle-slider {
      background: #0a5c5c;
    }

    .toggle input:checked + .toggle-slider::before {
      transform: translateX(20px);
    }

    .toggle-label {
      font-size: 13px;
      font-weight: 500;
      color: #6b7280;
    }

    /* Preview Section */
    .preview-section {
      margin-top: 12px;
      padding-top: 12px;
      border-top: 1px solid #f3f4f6;
    }

    .preview-toggle {
      background: none;
      border: none;
      color: #0a5c5c;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 6px;
      padding: 6px 0;
      transition: opacity 0.2s;
    }

    .preview-toggle:hover {
      opacity: 0.7;
    }

    .preview-toggle svg {
      transition: transform 0.2s;
    }

    .preview-toggle.active svg {
      transform: rotate(180deg);
    }

    .preview-details {
      margin-top: 16px;
      display: grid;
      grid-template-columns: 300px 1fr;
      gap: 24px;
    }

    .preview-card-demo {
      padding: 24px;
      border-radius: 12px;
      min-height: 200px;
    }

    .demo-icon {
      font-size: 32px;
      margin-bottom: 12px;
    }

    .demo-meta {
      font-size: 11px;
      font-weight: 600;
      color: #6b7280;
      margin-bottom: 12px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .preview-card-demo h4 {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 8px;
      color: #1a1a1a;
    }

    .preview-card-demo p {
      font-size: 14px;
      line-height: 1.6;
      color: #374151;
    }

    .preview-controls {
      display: flex;
      flex-direction: column;
      gap: 8px;
      align-items: start;
    }

    .text-danger {
      color: #dc2626 !important;
    }

    .text-danger:hover {
      background: #fee2e2 !important;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 80px 24px;
    }

    .empty-state h3 {
      font-size: 24px;
      font-weight: 600;
      margin: 24px 0 8px;
      color: #1a1a1a;
    }

    .empty-state p {
      font-size: 16px;
      color: #6b7280;
      margin-bottom: 24px;
    }

    @media (max-width: 768px) {
      .page-header {
        flex-direction: column;
        gap: 16px;
        align-items: start;
      }

      .carousel-settings {
        flex-direction: column;
        gap: 12px;
      }

      .preview-details {
        grid-template-columns: 1fr;
      }

      .insight-item {
        flex-direction: column;
      }

      .drag-handle {
        display: none;
      }
    }
  </style>

  <script>
    // User dropdown
    const userMenuBtn = document.getElementById('user-menu-btn');
    const userDropdown = document.getElementById('user-dropdown');

    userMenuBtn?.addEventListener('click', () => {
      userDropdown?.classList.toggle('hidden');
    });

    document.addEventListener('click', (e) => {
      if (!userMenuBtn?.contains(e.target as Node) && !userDropdown?.contains(e.target as Node)) {
        userDropdown?.classList.add('hidden');
      }
    });

    // Preview toggle
    document.querySelectorAll('.preview-toggle').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const id = (e.currentTarget as HTMLElement).dataset.id;
        const details = document.querySelector(`.preview-details[data-id="${id}"]`);
        details?.classList.toggle('hidden');
        (e.currentTarget as HTMLElement).classList.toggle('active');
      });
    });

    // Active toggle
    document.querySelectorAll('.active-toggle').forEach(toggle => {
      toggle.addEventListener('change', (e) => {
        const checkbox = e.target as HTMLInputElement;
        const id = checkbox.dataset.id;
        const label = checkbox.closest('.toggle')?.querySelector('.toggle-label');
        if (label) {
          label.textContent = checkbox.checked ? 'Active' : 'Hidden';
        }
        // TODO: Save to database
        console.log(`Set insight ${id} active:`, checkbox.checked);
      });
    });

    // Action buttons
    document.querySelectorAll('[data-action]').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const action = (e.currentTarget as HTMLElement).dataset.action;
        const id = (e.currentTarget as HTMLElement).dataset.id;

        switch (action) {
          case 'edit-preview':
            // TODO: Open preview edit modal
            console.log('Edit preview for', id);
            break;
          case 'edit-post':
            window.location.href = `/blog/editor?id=${id}`;
            break;
          case 'delete':
            if (confirm('Are you sure you want to delete this insight?')) {
              // TODO: Delete from database
              console.log('Delete insight', id);
            }
            break;
        }
      });
    });

    // Drag & drop reordering
    let draggedElement: HTMLElement | null = null;

    document.querySelectorAll('.insight-item').forEach(item => {
      item.setAttribute('draggable', 'true');

      item.addEventListener('dragstart', (e) => {
        draggedElement = e.currentTarget as HTMLElement;
        draggedElement.classList.add('dragging');
      });

      item.addEventListener('dragend', (e) => {
        draggedElement?.classList.remove('dragging');
        draggedElement = null;
        // TODO: Save new order to database
        updateCarouselOrder();
      });

      item.addEventListener('dragover', (e) => {
        e.preventDefault();
        const afterElement = getDragAfterElement(e.currentTarget as HTMLElement, e.clientY);
        const container = document.getElementById('insights-list');
        if (afterElement == null && container && draggedElement) {
          container.appendChild(draggedElement);
        } else if (container && draggedElement && afterElement) {
          container.insertBefore(draggedElement, afterElement);
        }
      });
    });

    function getDragAfterElement(container: HTMLElement, y: number) {
      const draggableElements = [...container.parentElement!.querySelectorAll('.insight-item:not(.dragging)')];

      return draggableElements.reduce((closest: any, child) => {
        const box = child.getBoundingClientRect();
        const offset = y - box.top - box.height / 2;

        if (offset < 0 && offset > closest.offset) {
          return { offset: offset, element: child };
        } else {
          return closest;
        }
      }, { offset: Number.NEGATIVE_INFINITY }).element;
    }

    function updateCarouselOrder() {
      const items = document.querySelectorAll('.insight-item');
      const newOrder = Array.from(items).map((item, index) => ({
        id: (item as HTMLElement).dataset.id,
        order: index + 1
      }));
      console.log('New carousel order:', newOrder);
      // TODO: Save to database
    }

    // Carousel settings
    document.getElementById('rotate-interval')?.addEventListener('change', (e) => {
      const value = (e.target as HTMLInputElement).value;
      console.log('Auto-rotate interval:', value, 'seconds');
      // TODO: Save to settings
    });

    document.getElementById('visible-count')?.addEventListener('change', (e) => {
      const value = (e.target as HTMLInputElement).value;
      console.log('Visible cards:', value);
      // TODO: Save to settings
    });
  </script>
</body>
</html>
